#ABUILD created by/создан: NK, nk-man at yandex.ru 
#----------------------------- General vars --------------------------------------
#------------------------- Основные переменные -----------------------------------
pkgname=kfaenza-icon-theme


# KFaezna 
pkgver=0.8.9

# Icon patch for the KFaezna icon theme
pkgver_p=0.3


pkgbuild=6
arch=('noarch')

shortdesc="Faenza icon theme for KDE4"
#longdesc=("")



source=(
#"http://omploader.org/vYjR0NQ"
#"http://omploader.org/vYXgxbQ"
"http://pkgs.fedoraproject.org/repo/pkgs/kfaenza-icon-theme/kfaenza-icon-theme-${pkgver}.tar.gz/95e9f287da7a0fd76fb406d313eee77e/kfaenza-icon-theme-${pkgver}.tar.gz"

"http://kde-look.org/CONTENT/content-files/153813-kfaenza-icon-patch-${pkgver_p}.tar.gz"

"http://packages.linuxmint.com/pool/main/m/mint-x-icons/mint-x-icons_1.1.6.tar.gz"
)



patch_opts=("")

#----------------------------- AgiliaLinux vars --------------------------------------
#--------------------- Специфичные для AgiliaLinux ------------------------------
#short and long tags / длинный и короткий тег
tags="themes x11-themes"

#dependencies only needed to build package
build_deps="faenza-icon-theme qt-creator>=2.7.0"

provides=""
conflicts=""

adddep="faenza-icon-theme oxygen-icons"
removedep=""

#for multi pkg abuild
pkglist=

#Set number of jobs while compliling, otherwise it'll be autodetected
#numjobs=1

#additional files should be copied into ${pkgdir}/usr/doc/${pkgname}-${pkgver} dir from sources
docs="AUTHORS COPYING"
gendeps_blacklist=

#custom_opts: skip_validate skip_gendeps no_postperm no_strip no_ccache
custom_opts="no_strip skip_gendeps"

#----------------------------- Make PKG --------------------------------------
#-------------------------- Сборка пакета ------------------------------------

#ran before function build()
#запускается перед сборкой.
#before_build()
#{
#
#}

build()
{
go_src_dir
burn_patches


pkgdir_i="${pkgdir}/usr/share/icons"
mkdir -p "${pkgdir_i}"


kf_0 (){
#--------------------------------------------------------------------------
#--------------------------------------------------------------------------
# KFaenza
#--------------------------------------------------------------------------
cp -r ${srcdir}/KFaenza ${pkgdir_i} || exit 1

rm -v ${pkgdir_i}/KFaenza/INSTALL
find ${pkgdir_i} -type f -name '.directory' -delete

# Docs
if [ ! -d ${pkgdir}/usr/doc/${pkgname}-${pkgver} ]; then
 mkdir -p ${pkgdir}/usr/doc/${pkgname}-${pkgver}
fi
faenza_ver="`mpkg-show faenza-icon-theme | grep faenza-icon-theme | awk {'print $2'}`"
cd /usr/doc/faenza-icon-theme-${faenza_ver/-*/}
cp -v $docs ${pkgdir}/usr/doc/${pkgname}-${pkgver} || exit 1

# ABOUT
cat "${pkgdir_i}"/KFaenza/index.theme | grep "Comment=" | sed "s/Comment=//" \
	> ${pkgdir}/usr/doc/${pkgname}-${pkgver}/ABOUT || exit 1
# desc
cat << EOF >> ${pkgdir}/usr/doc/${pkgname}-${pkgver}/ABOUT

--------------------------------------------------------------------------

KFaenza (KDE Icon Theme) by snakebite
< http://kde-look.org/content/show.php?content=143890 >

Description:
Faenza-Cupertino icon theme for KDE!
Credits:tiheum Faenza icons for gnome (creator of this theme)
john007 Faenza-Cupertino icons creator (gnome)
half-left Game Icon Pack creator santgio72 a lot work on porting Faenza-icons to kde,
mrmars Faenza-Cupertino port,
jetpack for his work on porting faenza to kde
funnyguy creator of Faenza Fresh icon pack
giannis12a sabayon icon!
DuncanIdaho kadu icon!

License: GPL
EOF
}

kf_0_p (){
#--------------------------------------------------------------------------
#--------------------------------------------------------------------------
# KFaenza patch
#--------------------------------------------------------------------------
mkdir -p "${pkgdir_i}"/KFaenza-patch
cp -ri $srcdir/{actions,apps,places} "${pkgdir_i}"/KFaenza-patch -n || exit 1
cd "${pkgdir_i}"/KFaenza-patch
lndir ../KFaenza/ ./
rm ./index.theme
cat ${pkgdir_i}/KFaenza/index.theme > ./index.theme
sed -i \
 -e "s|Name=KFaenza|Name=KFaenza-patch|" \
 -e "s| KDE port| KDE port w/ Icon patch v${pkgver_p}|" \
 ./index.theme || exit 1

# ABOUT:desc
cat << EOF >> ${pkgdir}/usr/doc/${pkgname}-${pkgver}/ABOUT

--------------------------------------------------------------------------

KFaenza icon patch by AndrejSoroj
< http://kde-look.org/content/show.php/KFaenza+icon+patch?content=153813 >

Description:
Icon patch for the KFaezna icon theme

License: GPL
EOF
}

kf_0_p_f (){
#--------------------------------------------------------------------------
#--------------------------------------------------------------------------
# Nk's fixes
#--------------------------------------------------------------------------
mkdir -p "${pkgdir_i}"/KFaenza-patch-fix
cd ${pkgdir_i}/KFaenza-patch-fix

if [[ -d "${pkgdir_i}/KFaenza-patch" ]]; then
 lndir ../KFaenza-patch/ ./
 #exit 1
else
 lndir ../KFaenza/ ./
 #exit 1
fi
rm -v ./index.theme


# for new patch #1of2
#find ${pkgdir_i}/KFaenza-fix -type l -delete


cat ${pkgdir_i}/KFaenza/index.theme > ./index.theme
sed -i \
 -e "s|Name=KFaenza|Name=KFaenza-patch-fix|" \
 -e "s| KDE port| KDE port w/ Icon patch v${pkgver_p} + Nk's fixes|" \
 ./index.theme || exit 1

I="`ls ${pkgdir_i}/KFaenza/apps/`"
M="`ls ${pkgdir_i}/KFaenza/mimetypes/`"
pkgdir_i_f="${pkgdir_i}/KFaenza-patch-fix"


###gajim
i_gajim (){
#
# part 1
for i in $I; do
 if [[ -z "`echo $i | grep scalable`" \
 && ! -e "${pkgdir_i_f}/apps/$i/gajim.png" \
 && -e "/usr/share/icons/Faenza/apps/$i/gajim.png" \
 ]]; then
  cd ${pkgdir_i_f}/apps/$i
  ln -s ../../../Faenza/apps/$i/gajim.png gajim.png
 elif [[ ! -z "`echo $i | grep scalable`" \
 && ! -e "${pkgdir_i_f}/apps/scalable/gajim.svg" \
 && -e "/usr/share/icons/Faenza/apps/scalable/gajim.svg" \
 ]]; then
  cd ${pkgdir_i_f}/apps/scalable
  ln -s ../../../Faenza/apps/scalable/gajim.svg gajim.svg
 fi
done
#
# part 2
#iF="`ls /usr/share/icons/Faenza/apps/`"
#for f in $iF; do 
# if [[ ! -d ${pkgdir_i_f}/apps/$f \
# && -e "/usr/share/icons/Faenza/apps/$f/gajim.png" \
# && ! -e "${pkgdir_i_f}/apps/$f/gajim.png" \
# ]]; then
#  mkdir -p ${pkgdir_i_f}/apps/$f
#  cd ${pkgdir_i_f}/apps/$f
#  ln -s /usr/share/icons/Faenza/apps/$f/gajim.png gajim.png
# fi
#done
#
# part of index.theme
cd $pkgdir_i_f
if [[ -z "`cat ./index.theme | grep Dir | grep scalable`" ]]; then
sed -i \
 -e "s|places/256,status/256|places/256,status/256,apps/scalable|" \
 ./index.theme || exit 1
echo "" >> ./index.theme || exit 1
cat << EOF >> ./index.theme
[apps/scalable]
Size=96
Context=Apps
Type=Scalable
MinSize=8
MaxSize=512
EOF
fi
cd -
}
i_gajim


# qpdfv
i_qpdfv (){
for i in $I; do
 if [[ -z "`echo $i | grep scalable`" \
 && -e "/usr/share/icons/oxygen/${i}x${i}/actions/document-preview.png" \
 ]]; then
  cd ${pkgdir_i_f}/apps/$i
  ln -s /usr/share/icons/oxygen/${i}x${i}/actions/document-preview.png qpdfview.png
 elif [[ ! -e "${pkgdir_i_f}/apps/scalable/qpdfview.svg" \
 && -e "/usr/share/icons/oxygen/scalable/actions/document-preview.svg" \
 ]]; then
  cd ${pkgdir_i_f}/apps/scalable
  ln -s /usr/share/icons/oxygen/scalable/actions/document-preview.svg qpdfview.svg
 fi
done
}
#i_qpdfv


dir_m="${pkgdir_i_f}/mimetypes"
dir_a="${pkgdir_i_f}/apps"
dir_ms="./mimetypes"
dir_as="./apps"


# apps
rm_ia (){
for i in $I; do
cd ${dir_a}/$i

#if [ -e "${il}.png" ]; then
# mv -v ${il}.png ${il}.png_
#elif [ -e "${il}.svg" ]; then
# mv -v ${il}.svg ${il}.svg_
#fi

if [ -e "${pkgdir_i}/KFaenza/apps/$i/${il_new}.png" ]; then
 ln -sfv ./${il_new}.png ${il}.png
elif [ -e "${pkgdir_i}/KFaenza/apps/$i/${il_new}.svg" ]; then
 ln -sfv ./${il_new}.svg ${il}.svg
else
 echo $il_new : $i - not found
fi

done
}

# emblems
rm_ie (){
dir_e="${pkgdir_i_f}/emblems"
dir_es="./emblems"

for i in $I; do
cd ${pkgdir_i_f}/apps/$i

if [ -e "${il}.png" ]; then
 mv -v ${il}.png ${il}.png_
elif [ -e "${il}.svg" ]; then
 mv -v ${il}.svg ${il}.svg_
fi

if [ -e "${dir_e}/$i/${il_new}.png" ]; then
 ln -sfv ./${il_new}.png ${il}.png
elif [ -e "${dir_e}/$i/${il_new}.svg" ]; then
 ln -sfv ./${il_new}.svg ${il}.svg
else
 echo ${i}: $il_new not found
 #exit 1
fi

done
}

# Warning! don't work
# categories
rm_ic (){
dir_c="${pkgdir_i_f}/categories"
dir_cs="./categories"
for i in $I; do
cd ${pkgdir_i_f}/apps/$i
if [ -e "${il}.png" ]; then
 mv -v ${il}.png ${il}.png_
elif [ -e "${il}.svg" ]; then
 mv -v ${il}.svg ${il}.svg_
fi
if [ -e "${dir_c}/$i/${il_new}.png" ]; then
 ln -sfv ./${il_new}.png ${il}.png
elif [ -e "${dir_c}/$i/${il_new}.svg" ]; then
 ln -sfv ./${il_new}.svg ${il}.svg
else
 echo ${i}: $il_new not found
fi
done
}


# mimetypes
rm_im (){
for i in $M; do
cd ${dir_m}/$i
if [ -e "${pkgdir_i}/KFaenza/mimetypes/$i/${il_new}.png" ]; then
 ln -sfv ./${il_new}.png ${il}.png
elif [ -e "${pkgdir_i}/KFaenza/mimetypes/$i/${il_new}.svg" ]; then
 ln -sfv ./${il_new}.svg ${il}.svg
else
 echo $il_new : $i - not found
fi
done
}
cp_iam(){
for i in $M; do
cd $dir_a/$i
if [ -e "$dir_a/$i/${il_new}.svg" ]; then
 cp -av ${il_new}.svg ${dir_m}/$i/${il}.svg
elif [ -e "$dir_a/$i/${il_new}.png" ]; then
 cp -av ${il_new}.png ${dir_m}/$i/${il}.png
else
 echo $il_new : $i - not found
fi
done
}


# del icons
rm_i (){
for i in $I; do
cd ${pkgdir_i_f}/apps/$i
if [ -e "${il}.png" ]; then
 mv -v ${il}.png ${il}.png_
elif [ -e "${il}.svg" ]; then
 mv -v ${il}.svg ${il}.svg_
fi
done
}


il="galculator"; 	rm_i
il="kscd"; 		rm_i
#il="smplayer"; 	rm_i
il="gpicview"; 		rm_i
il="kolourpaint"; 	rm_i

#il="dragonplayer"; 	il_new="media-video"; 			rm_im

#il="video-x-flv"; 	il_new="application-x-flash-video"; 	rm_im
il="video-x-flv"; 	il_new="flashplayer"; 			cp_iam


#il="dragonplayer"; 	il_new="mplayer"; 		rm_ia
il="dragonplayer"; 	il_new="totem"; 		rm_ia
il="ristretto"; 	il_new="kaffeine"; 		rm_ia

#il="smplayer"; 	il_new="totem";			rm_ia

# DMs != Transmission OR Deluge
il="qbittorrent"; 	il_new="deluge-torrent"; 	rm_i
il="kget";	 	il_new="emblem-downloads";	rm_i

#il="ktorrent";	 	il_new="applications-internet";	rm_ic
il="ktorrent";	 	rm_i

# Dolphin
#il="dolphin"; 		il_new="system-file-manager"; 	rm_ia
il="dolphin"; 		il_new="wireshark"; 		rm_ia

il="clementine"; 	il_new="clementine4"; 		rm_ia
#il="firefox";		il_new="firefox-original";	rm_ia 
il="gvim";		il_new="vim";			rm_ia
il="qupzilla";	 	il_new="web-browser";	 	rm_ia

# AgiliaLinux tools
il="mpkg-manager2"; 	il_new="package-manager-icon";	rm_ia
il="mpkg-apackager"; 	il_new="package-manager-icon"; 	rm_ia
il="guisetup"; 		il_new="pk-package-sources"; 	rm_ia

# Qt4 tools
#il="qtassistant"; 	il_new="qt4assistant"; 		rm_ia
il="QtProject-qtcreator";	il_new="qtcreator"; 	rm_ia
il="qt4qtconfig"; 		il_new="qtlogo"; 	rm_ia


# fix: rename qtassisant -> qtassistant
for i in $I; do
if [ -e "${pkgdir_i_f}/apps/$i/qtassisant.png" ]; then
 cd ${pkgdir_i_f}/apps/$i/
 mv -v qtassisant.png qtassistant.png
elif [ -e "${pkgdir_i_f}/apps/$i/qtassisant.svg" ]; then
 cd ${pkgdir_i_f}/apps/$i/
 mv -v qtassisant.svg qtassistant.svg
fi
done


# fix qt -> qt4
IQT4="qt4assistant qt4designer qt4linguist qt4qtconfig"
for iqt4 in $IQT4; do
 for i in $I; do
 if [ -e "${pkgdir_i}/KFaenza/apps/$i/${iqt4/qt4/qt}.png" ]; then
  cd ${dir_a}/$i
  ln -sfv ./${iqt4/qt4/qt}.png ${iqt4}.png
 elif [ -e "${pkgdir_i}/KFaenza/apps/$i/${iqt4/qt4/qt}.svg" ]; then
  cd ${dir_a}/$i
  ln -sfv ./${iqt4/qt4/qt}.svg ${iqt4}.svg 
 #else
 # cd ${dir_a}/$i
 # ln -sfv ./qtlogo.png ${iqt4}.png || ln -sfv ./qtlogo.svg ${iqt4}.svg
 fi
 done
done


# fix .xpm-16 and other mimetypes
i_m16 (){
cd ${pkgdir_i_f}/mimetypes/16/
ln -sf ./image-x-generic.png image.png
ln -sf ./image-x-generic.png image-x-tga.png
ln -sf ./image-x-generic.png gnome-mime-application-x-killustrator.png
ln -sf ./image-x-generic.png gnome-mime-image-x-cmu-raster.png
ln -sf ./image-x-generic.png gnome-mime-image-x-xpixmap.png
ln -sf ./image-x-generic.png gnome-mime-image.png
}
i_m16


# fix zero length file 64/stock_new-address-book.png
if [[ ! -s "${pkgdir_i}/KFaenza/actions/64/stock_new-address-book.png" \
&& -e "${pkgdir_i_f}/actions/64/stock_new-address-book.png" \
]]; then
 cd ${pkgdir_i_f}/actions/64/
 rm -v stock_new-address-book.png
fi


# qtcreator_logo_32.png
for i in $I; do
 if [[ -L "${pkgdir_i}/KFaenza/apps/$i/qtcreator_logo_32.png" \
 && -L "${pkgdir_i_f}/apps/$i/qtcreator_logo_32.png"
 ]]; then
  cd ${pkgdir_i_f}/apps/$i
  rm -v ./qtcreator_logo_32.png
 elif [[ -L "${pkgdir_i}/KFaenza/apps/$i/qtcreator_logo_32.svg"  \
 && -e "${pkgdir_i_f}/apps/$i/qtcreator_logo_32.png"
 ]]; then
  cd ${pkgdir_i_f}/apps/$i
  rm -v ./qtcreator_logo_32.svg
 fi
done


# mGeany - 1 icon for all geany sizes
#rm -v ${pkgdir_i_f}/apps/{16,22}/geany.png

# Geany-faenza-icon from LinuxMint
# ABOUT:desc
cd $srcdir/mint-x-icons
cat << EOF >> ${pkgdir}/usr/doc/${pkgname}-${pkgver}/ABOUT

--------------------------------------------------------------------------

New Geany icon < Mint-X Icon themes / mint-x-icons (1.1.1) nadia >
Dropbox < Added apps from Mint-Xtra (with a few exceptions) >
EOF
cat ./debian/copyright >> ${pkgdir}/usr/doc/${pkgname}-${pkgver}/ABOUT


find ${pkgdir_i}/KFaenza-patch-fix -name geany.* -exec rm -v {} ";"

G="`ls $srcdir/mint-x-icons/usr/share/icons/Mint-X/apps`"
for g in $G; do
 install -Dm644 -v ./usr/share/icons/Mint-X/apps/$g/geany.png ${pkgdir_i}/KFaenza-patch-fix/apps/$g/geany.png \
 || install -Dm644 -v ./usr/share/icons/Mint-X/apps/$g/geany.svg ${pkgdir_i}/KFaenza-patch-fix/apps/$g/geany.svg
done



# Dropbox - w/o diff.icons
# only blue
#rm -v ${pkgdir_i_f}/apps/{16,22,64,128,256}/dropbox.png
#rm -v ${pkgdir_i_f}/apps/scalable/dropbox.svg
# only yellow
#rm -v ${pkgdir_i_f}/apps/{32,48}/dropbox.png

find ${pkgdir_i}/KFaenza-patch-fix -name dropbox.* -exec rm -v {} ";"
for g in $G; do
 install -Dm644 -v ./usr/share/icons/Mint-X/apps/$g/dropbox.png ${pkgdir_i}/KFaenza-patch-fix/apps/$g/dropbox.png \
 || install -Dm644 -v ./usr/share/icons/Mint-X/apps/$g/dropbox.svg ${pkgdir_i}/KFaenza-patch-fix/apps/$g/dropbox.svg
done



# icons
find "${pkgdir_i}" -type f -name '.directory' -delete
find "${pkgdir_i}" -type f -exec chmod 644 {} \;
find "${pkgdir_i}" -type d -exec chmod 755 {} \;

find "${pkgdir_i}" -type f -name '*_' -delete
find "${pkgdir_i}" -type l -name '*_' -delete


# for new patch #2of2
#find ${pkgdir_i}/KFaenza-fix -type d -empty -delete && rm -rf ${pkgdir_i}/KFaenza
}


# brown-folders
kf_br (){
dir_br="${pkgdir_i}/KFaenza-brown"
mkdir -p "${dir_br}"
cd "${dir_br}"
cp -rf ${srcdir}/brown-folders/places "${dir_br}" || exit 1
lndir ../KFaenza/ ./
rm ${dir_br}/index.theme
cat ${pkgdir_i}/KFaenza/index.theme > ${dir_br}/index.theme
sed -i \
 -e "s|Name=KFaenza|Name=${dir_br/"${pkgdir_i}/"/}|" \
 -e "s| KDE port| KDE port with brown folders|" \
 ${dir_br}/index.theme || exit 1
}


# start
kf_0
kf_0_p
kf_0_p_f
#kf_br
}



#ran after function build() 
#после сборки
#after_build()
#{
#
#}
